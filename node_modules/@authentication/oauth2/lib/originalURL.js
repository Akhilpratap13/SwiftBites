"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const url_1 = require("url");
/**
 * Reconstructs the original URL of the request.
 *
 * This function builds a URL that corresponds the original URL requested by the
 * client, including the protocol (http or https) and host.
 *
 * If the request passed through any proxies that terminate SSL, the
 * `X-Forwarded-Proto` header is used to detect if the request was encrypted to
 * the proxy, assuming that the proxy has been flagged as trusted.
 */
function originalURL(req, options = {}) {
    const app = req.app;
    if (app && app.get && app.get('trust proxy')) {
        options.trustProxy = true;
    }
    const trustProxy = typeof options.trustProxy === 'boolean' ? options.trustProxy : !!(app && app.get && app.get('trust proxy')) || process.env.NODE_ENV === 'development';
    const proto = ('' + (req.headers['x-forwarded-proto'] || '')).toLowerCase();
    const tls = req.connection.encrypted || trustProxy && 'https' == proto.split(/\s*,\s*/)[0];
    const host = trustProxy && req.headers['x-forwarded-host'] || req.headers.host;
    const protocol = tls ? 'https' : 'http';
    const path = req.url || '';
    if (process.env.BASE_URL || process.env.BASE_URI) {
        return new url_1.URL(path, process.env.BASE_URL || process.env.BASE_URI);
    }
    return new url_1.URL(protocol + '://' + host + path);
}
exports.default = originalURL;
//# sourceMappingURL=originalURL.js.map